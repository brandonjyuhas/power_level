module Level

  def determine_level(xp)
    case xp
    when 0...1000
      [1, 1000-xp, xp]
    when 1000...2500
      [2, 2500-xp, xp]
    when 2500...4500
      [3, 4500-xp, xp]
    when 4500...7000
      [4, 7500-xp, xp]
    when 7000...10000
      [5, 10000-xp, xp]
    when 10000...13500
      [6, 13500-xp, xp]
    when 13500...17500
      [7, 17000-xp, xp]
    when 17500...22000
      [8, 22000-xp, xp]
    when 22000...27000
      [9, 27000-xp, xp]
    when 27000...32500
      [10, 32500-xp, xp]
    when 32500...38500
      [11, 38500-xp, xp]
    when 38500...45000
      [12, 45000-xp, xp]
    when 45000...52000
      [13, 52000-xp, xp]
    when 52000...59500
      [14, 59500-xp, xp]
    when 59500...67500
      [15, 67500-xp, xp]
    when 67500...76000
      [16, 76000-xp, xp]
    when 76000...85000
      [17, 85000-xp, xp]
    when 85000...94500
      [18, 94500-xp, xp]
    when 94500...104500
      [19, 94500-xp, xp]
    when 104500...115000
      [20, 115000-xp, xp]
    when 115000...126000
      [21, 126000-xp, xp]
    when 126000...137500
      [22, 137500-xp, xp]
    when 137500...149500
      [23, 149500-xp, xp]
    when 149500...162000
      [24, 162000-xp, xp]
    when 162000...175000
      [25, 175000-xp, xp]
    when 175000...188500
      [26, 188500-xp, xp]
    when 188500...202500
      [27, 202500-xp, xp]
    when 202500...217000
      [28, 217000-xp, xp]
    when 217000...232000
      [29, 232000-xp, xp]
    else
      [30, 1000000000000000000000000000-xp, xp]
    end
  end
end
